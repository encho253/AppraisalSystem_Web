//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppraisalSystem.Web.EvaluationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DB")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Evaluation", Namespace="http://schemas.datacontract.org/2004/07/DB")]
    [System.SerializableAttribute()]
    public partial class Evaluation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EvalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EvaluationTemplateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EvalDate {
            get {
                return this.EvalDateField;
            }
            set {
                if ((this.EvalDateField.Equals(value) != true)) {
                    this.EvalDateField = value;
                    this.RaisePropertyChanged("EvalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EvaluationTemplateId {
            get {
                return this.EvaluationTemplateIdField;
            }
            set {
                if ((this.EvaluationTemplateIdField.Equals(value) != true)) {
                    this.EvaluationTemplateIdField = value;
                    this.RaisePropertyChanged("EvaluationTemplateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EvaluationService.IEvaluationWcfService")]
    public interface IEvaluationWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvaluationWcfService/CreateEvaluation", ReplyAction="http://tempuri.org/IEvaluationWcfService/CreateEvaluationResponse")]
        void CreateEvaluation(int userId, int evaluationTemplateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvaluationWcfService/CreateEvaluation", ReplyAction="http://tempuri.org/IEvaluationWcfService/CreateEvaluationResponse")]
        System.Threading.Tasks.Task CreateEvaluationAsync(int userId, int evaluationTemplateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvaluationWcfService/AddEvaluatorToEvaluation", ReplyAction="http://tempuri.org/IEvaluationWcfService/AddEvaluatorToEvaluationResponse")]
        void AddEvaluatorToEvaluation(string username, string usernameEvaluator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvaluationWcfService/AddEvaluatorToEvaluation", ReplyAction="http://tempuri.org/IEvaluationWcfService/AddEvaluatorToEvaluationResponse")]
        System.Threading.Tasks.Task AddEvaluatorToEvaluationAsync(string username, string usernameEvaluator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvaluationWcfService/GetAllEvaluatorsForEvaluation", ReplyAction="http://tempuri.org/IEvaluationWcfService/GetAllEvaluatorsForEvaluationResponse")]
        AppraisalSystem.Web.EvaluationService.User[] GetAllEvaluatorsForEvaluation(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvaluationWcfService/GetAllEvaluatorsForEvaluation", ReplyAction="http://tempuri.org/IEvaluationWcfService/GetAllEvaluatorsForEvaluationResponse")]
        System.Threading.Tasks.Task<AppraisalSystem.Web.EvaluationService.User[]> GetAllEvaluatorsForEvaluationAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvaluationWcfService/GetAllEvaluationsForUser", ReplyAction="http://tempuri.org/IEvaluationWcfService/GetAllEvaluationsForUserResponse")]
        AppraisalSystem.Web.EvaluationService.Evaluation[] GetAllEvaluationsForUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvaluationWcfService/GetAllEvaluationsForUser", ReplyAction="http://tempuri.org/IEvaluationWcfService/GetAllEvaluationsForUserResponse")]
        System.Threading.Tasks.Task<AppraisalSystem.Web.EvaluationService.Evaluation[]> GetAllEvaluationsForUserAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEvaluationWcfServiceChannel : AppraisalSystem.Web.EvaluationService.IEvaluationWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EvaluationWcfServiceClient : System.ServiceModel.ClientBase<AppraisalSystem.Web.EvaluationService.IEvaluationWcfService>, AppraisalSystem.Web.EvaluationService.IEvaluationWcfService {
        
        public EvaluationWcfServiceClient() {
        }
        
        public EvaluationWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EvaluationWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EvaluationWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EvaluationWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateEvaluation(int userId, int evaluationTemplateId) {
            base.Channel.CreateEvaluation(userId, evaluationTemplateId);
        }
        
        public System.Threading.Tasks.Task CreateEvaluationAsync(int userId, int evaluationTemplateId) {
            return base.Channel.CreateEvaluationAsync(userId, evaluationTemplateId);
        }
        
        public void AddEvaluatorToEvaluation(string username, string usernameEvaluator) {
            base.Channel.AddEvaluatorToEvaluation(username, usernameEvaluator);
        }
        
        public System.Threading.Tasks.Task AddEvaluatorToEvaluationAsync(string username, string usernameEvaluator) {
            return base.Channel.AddEvaluatorToEvaluationAsync(username, usernameEvaluator);
        }
        
        public AppraisalSystem.Web.EvaluationService.User[] GetAllEvaluatorsForEvaluation(string username) {
            return base.Channel.GetAllEvaluatorsForEvaluation(username);
        }
        
        public System.Threading.Tasks.Task<AppraisalSystem.Web.EvaluationService.User[]> GetAllEvaluatorsForEvaluationAsync(string username) {
            return base.Channel.GetAllEvaluatorsForEvaluationAsync(username);
        }
        
        public AppraisalSystem.Web.EvaluationService.Evaluation[] GetAllEvaluationsForUser(string username) {
            return base.Channel.GetAllEvaluationsForUser(username);
        }
        
        public System.Threading.Tasks.Task<AppraisalSystem.Web.EvaluationService.Evaluation[]> GetAllEvaluationsForUserAsync(string username) {
            return base.Channel.GetAllEvaluationsForUserAsync(username);
        }
    }
}
